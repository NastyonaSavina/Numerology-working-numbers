{"version":3,"file":"static/js/184.c83a4ca5.chunk.js","mappings":"4KAuLA,UAjLuB,WAIrB,IAAIA,EAAO,GACX,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,MAIEC,EAAAA,EAAAA,YAAU,WAET,GAAE,CAACN,IAEP,IAAMO,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACX,OAAQN,GACN,IAAK,OACHD,EAAQO,GACR,MAEF,IAAK,OACHL,EAAQK,GAMb,EAuDH,OAFAC,QAAQC,IAAIZ,IAGV,iCACE,kBACEa,UAAU,2GACVC,SAxDe,SAACN,GACpBA,EAAMO,iBAEN,IAAIC,EAAc,CAAC,EAEbC,EAAqBf,EAAKgB,MAAM,IAAIC,OAAS,EAG7CC,EAAOlB,EAAKgB,MAAM,IAAIG,QAAO,SAACC,EAAMC,GACxC,OAAOD,EAAOE,WAAWD,EAC1B,GAAE,GACHP,EAAYI,KAAOA,EAGnB,IAAMK,EAAOL,EACVM,WACAR,MAAM,IACNG,QAAO,SAACC,EAAMC,GACb,OAAOD,EAAOE,WAAWD,EAC1B,GAAE,GACLP,EAAYS,KAAOA,EAGnB,IAAME,EAASP,EAA2B,EAApBlB,EAAKgB,MAAM,IAAI,GACrCF,EAAYW,OAASA,EAErB,IAAMC,EAAQD,EACXD,WACAR,MAAM,IACNG,QAAO,SAACC,EAAMC,GACb,OAAOD,EAAOE,WAAWD,EAC1B,GAAE,GACLP,EAAYY,MAAQA,EAEpB,IAAMC,EAAQT,GAA+C,IAAvClB,EAAKgB,MAAM,IAAID,GAAiE,EAArCf,EAAKgB,MAAM,IAAID,EAAmB,GAAyC,EAAnCf,EAAKgB,MAAM,IAAID,IACxHD,EAAYa,MAAQA,EAEpB,IAAMC,EAAOD,EACVH,WACAR,MAAM,IACNG,QAAO,SAACC,EAAMC,GACb,OAAOD,EAAOE,WAAWD,EAC1B,GAAE,GACLP,EAAYc,KAAOA,EACnBd,EAAYe,GAAK,GAEjB/B,EAAKgC,KAAKhB,EAEX,EAMG,WAIE,wDAEA,iBAAKH,UAAU,WAAf,WACE,kBAAOA,UAAU,GAAGoB,QAAQ,kBAA5B,8CAGA,kBACEC,KAAK,OACLrB,UAAU,eACVkB,GAAG,kBACHI,YAAY,WACZ/B,KAAK,OACLgC,SAAU7B,EACVG,MAAOR,EACPmC,UAAQ,QAGZ,iBAAKxB,UAAU,WAAf,WACE,kBAAOA,UAAU,GAAGoB,QAAQ,kBAA5B,mBAGA,kBACEC,KAAK,OACLrB,UAAU,eACVkB,GAAG,kBACHI,YAAY,0BACZ/B,KAAK,OACLgC,SAAU7B,EACVG,MAAON,EACPiC,UAAQ,QAIZ,gBAAKxB,UAAU,WAAf,UACE,mBAAQqB,KAAK,SAASrB,UAAU,kBAAhC,yBAvCN,OA4CGb,QA5CH,IA4CGA,OA5CH,EA4CGA,EAAMsC,KAAI,SAAAC,GAAI,OACb,4BACE,+BACA,sCACA,+BACA,uCALW,MA+CpB,C","sources":["pages/WorkingNumbers/WorkingNumbers.jsx"],"sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport { Row, Col, Card, Table } from 'react-bootstrap';\n\n\n\nconst WorkingNumbers = () => {\n\n \n\n  let data = [];\n  const [date, setDate] = useState('');\n  const [name, setName] = useState('');\n  \n\n\n    useEffect(() => {\n      \n    }, [data]);\n\n const handleChange = event => {\n   const { name, value } = event.target;\n      switch (name) {\n        case 'date':\n          setDate(value);\n          break;\n\n        case 'name':\n          setName(value);\n          break;\n\n        default:\n          break;\n      }\n    };\n  \n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let calculation = {};\n\n    const lastNumberPosition = date.split('').length - 1;\n\n        \n    const nOne = date.split('').reduce((prev, number) => {\n      return prev + parseFloat(number);\n    }, 0);\n    calculation.nOne = nOne;\n\n    \n    const nTwo = nOne\n      .toString()\n      .split('')\n      .reduce((prev, number) => {\n        return prev + parseFloat(number);\n      }, 0);\n    calculation.nTwo = nTwo;\n\n\n    const nThree = nOne - date.split('')[0] * 2;\n    calculation.nThree = nThree;\n\n    const nFour = nThree\n      .toString()\n      .split('')\n      .reduce((prev, number) => {\n        return prev + parseFloat(number);\n      }, 0);\n    calculation.nFour = nFour;\n\n    const nFive = nOne + (date.split('')[lastNumberPosition] === 0 ? date.split('')[lastNumberPosition-1]*2 :date.split('')[lastNumberPosition]*2) ;\n    calculation.nFive = nFive;\n\n    const nSix = nFive\n      .toString()\n      .split('')\n      .reduce((prev, number) => {\n        return prev + parseFloat(number);\n      }, 0);\n    calculation.nSix = nSix;\n    calculation.id = 25;\n\n    data.push(calculation);\n\n  };\n\n  console.log(data);\n\n  return (\n    <>\n      <form\n        className=\"row gy-2 gx-4 align-items-end mx-0 mb-4 bg-secondary-subtle border border-secondary-subtle rounded-3 p-3\"\n        onSubmit={handleSubmit}\n      >\n        <h4>Enter data for calculation</h4>\n\n        <div className=\"col-auto\">\n          <label className=\"\" htmlFor=\"autoSizingInput\">\n            Date of Birth - format DDMMYYYY\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"autoSizingInput\"\n            placeholder=\"DDMMYYYY\"\n            name=\"date\"\n            onChange={handleChange}\n            value={date}\n            required\n          />\n        </div>\n        <div className=\"col-auto\">\n          <label className=\"\" htmlFor=\"autoSizingInput\">\n            Name\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"autoSizingInput\"\n            placeholder=\"Enter the person's name\"\n            name=\"name\"\n            onChange={handleChange}\n            value={name}\n            required\n          />\n        </div>\n\n        <div className=\"col-auto\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </div>\n      </form>\n      {data?.map(item => (\n        <div>\n          <p>#1</p>\n          <p>item.nOne</p>\n          <p>#2</p>\n          <p>item.ntwo</p>\n        </div>\n      ))}\n\n     {/* Добавить редюсер */}\n\n      {/* <Row>\n        <Col>\n          <Card>\n            <Card.Body>\n              <Table responsive hover>\n                <thead>\n                  <tr>\n                    <th>#5 </th>\n                    <th>#6</th>\n                    <th>#1</th>\n                    <th>#2</th>\n                    <th>#3</th>\n                    <th>#4</th>\n                    <th>Name</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data?.map(item => (\n                    <tr key={item.id} className=\"align-items-center\">\n                      <td>{item.nFive}</td>\n                      <td>{item.nSix}</td>\n                      <td>{item.nOne}</td>\n                      <td>{item.nTwo}</td>\n                      <td>{item.nThree}</td>\n                      <td>{item.nFour}</td>\n                      <td>{item.name}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row> */}\n    </>\n  );\n};\n\nexport default WorkingNumbers;\n"],"names":["data","useState","date","setDate","name","setName","useEffect","handleChange","event","target","value","console","log","className","onSubmit","preventDefault","calculation","lastNumberPosition","split","length","nOne","reduce","prev","number","parseFloat","nTwo","toString","nThree","nFour","nFive","nSix","id","push","htmlFor","type","placeholder","onChange","required","map","item"],"sourceRoot":""}